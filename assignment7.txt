                                               Assignment - 7
------------------------------------------------------------------------------------------------------------------------------------
1. Write a program to find the Nth term of the Fibonnaci series.
.....................................................................................................................................
#include<stdio.h>
int main()
{
int n, t1 = 0, t2 = 1, nextterm = 0, i;
printf("Enter the n value: ");
scanf("%d", &n);
if(n == 0 || n == 1) 
printf(“%d”, n); 
else
nextterm = t1 + t2;
for (i = 3; i <= n; ++i)
{
t1 = t2;
t2 = nextterm;
nextTerm = t1 + t2;
}
printf("%d", t2);
}
--------------------------------------------------------------------------------------------------------------------------------
2. Write a program to print first N terms of Fibonacci series.
.................................................................................................................................
#include <stdio.h>
void main()
{
int fib1 = 0, fib2 = 1, fib3, num, count = 0;
printf("Enter the value of num \n");
scanf("%d", &num);
printf("First %d FIBONACCI numbers are ...\n", num);
printf("%d\n", fib1);
printf("%d\n", fib2);
count = 2; 
while (count < num)
{
fib3 = fib1 + fib2;
count++;
printf("%d\n", fib3);
fib1 = fib2;
fib2 = fib3;
}
}
--------------------------------------------------------------------------------------------------------------------------------------
3. Write a program to check whether a given number is there in the Fibonacci series or not.
......................................................................................................................................
#include <stdio.h>
#include <math.h>
int isPerfectSquare(int x)
{
int s = (int)sqrt(x);
return (s*s == x);
}
int isFibonacci(int x)
{
return isPerfectSquare(5*x*x + 4) || isPerfectSquare(5*x*x - 4);
}
int main(void)
{
//int n = 12;
//int n = 55;
int n = 8;
if (n>0)
{
printf("Is %d a Fibonacci number? %d",n, isFibonacci(n));
}
return 0;
}
.....................................................................................................................................
4. Write a program to calculate HCF of two numbers.
--------------------------------------------------------------------------------------------------------------------------------------
#include <stdio.h>
Int main()
{
Int n1, n2;

Printf(“Enter two positive integers: “);
Scanf(“%d %d”,&n1,&n2);

While(n1!=n2)
{
If(n1 > n2)
N1 -= n2;
Else
N2 -= n1;
}
Printf(“HCF = %d”,n1);

Return 0;
}
......................................................................................................................................
5. Write a program to check whether two given numbers are co-prime numbers or not.
---------------------------------------------------------------------------------------------------------------------------------------
#include<stdio.h>
int coprime(int num1, int num2)
{
int min, count, flag = 1;

min = num1 < num2 ? num1 : num2;

for(count = 2; count <= min; count++)
{
if( num1 % count == 0 && num2 % count == 0 )
{
flag = 0;
break;
}
}

return(flag);
}

int main()
{
int n1, n2;

printf("Enter 2 positive numbers\n");
scanf("%d%d", &n1, &n2);

if( coprime(n1, n2) )
{
printf("%d and %d are co-prime numbers.\n", n1, n2);
}
else
{
printf("%d and %d are not co-prime numbers.\n", n1, n2);
}

return 0;
}
......................................................................................................................................
6. Write a program to print all Prime numbers under 100
--------------------------------------------------------------------------------------------------------------------------------------
#include <stdio.h>
int main()
{
int i, a = 1, count;

while(a <= 100)
{
count = 0;
i = 2;
while(i <= a/2)
{
if(a%i == 0)
{
count++;
break;
}
i++;
}
if(count == 0 && a != 1 )
{
printf(" %d ", a);
}
a++;
}
return 0;
}
.............................................................................................................................................
7. Write a program to print all Prime numbers between two given numbers
--------------------------------------------------------------------------------------------------------------------------------------
#include <stdio.h>
int main() {
   int low, high, i, flag, temp;
   printf("Enter two numbers(intervals): ");
   scanf("%d %d", &low, &high);

   // swap numbers if low is greather than high
   if (low > high) 
{
      temp = low;
      low = high;
      high = temp;
   }

   printf("Prime numbers between %d and %d are: ", low, high);
   while (low < high) {
      flag = 0;

      // ignore numbers less than 2
      if (low <= 1) {
         ++low;
         continue;
      }

      for (i = 2; i <= low / 2; ++i) {
         if (low % i == 0) {
            flag = 1;
            break;
         }
      }
      if (flag == 0)
         printf("%d ", low);
      ++low;
   }

   return 0;
}
......................................................................................................................................
8. Write a program to find next Prime number of a given number.
---------------------------------------------------------------------------------------------------------------------------------------
#include<stdio.h>
int main()
{
int n,i,j,flag=0,out;

clrscr();

printf("enter the num\n");

scanf("%d",&n);

for(i=n+1;i<=100;i++)
{

flag=0;

for(j=2;j<i;j++)
{
if(i%j==0)
{
flag=1;
break;
}
}

if(flag==0)
{
printf("next prime is:%d",i);
break;
}
}

getch();
return 0;

}



----------------------------------------------------------------------------------------------------------------------------------------
9.Write a program to check whether a given number is an Armstrong number or not.
............................................................................................................................................
#include <math.h>
#include <stdio.h>

int main() {
int num, originalNum, remainder, n = 0;
   float result = 0.0;

   printf("Enter an integer: ");
   scanf("%d", &num);

   originalNum = num;

   // store the number of digits of num in n
   for (originalNum = num; originalNum != 0; ++n) {
       originalNum /= 10;
   }

   for (originalNum = num; originalNum != 0; originalNum /= 10) {
       remainder = originalNum % 10;

      // store the sum of the power of individual digits in result
      result += pow(remainder, n);
   }

   // if num is equal to result, the number is an Armstrong number
   if ((int)result == num)
    printf("%d is an Armstrong number.", num);
   else
    printf("%d is not an Armstrong number.", num);
   return 0;
}
................................................................................................................................
10. Write a program to print all Armstrong numbers under 1000.
---------------------------------------------------------------------------------------------------------------------------------
#include<stdio.h> 
#include<conio.h> 
int main( ) 
{ 
int no, temp, rem, sum,count=0; 
printf("Armstrong numbers between 1 and 1000 are:\n"); 
for(no=1; no<=1000; no++) 
{ 
temp=no; 
sum=0; 
while(temp>0) 
{ 
rem=temp%10; 
sum=sum+(rem*rem*rem); 
temp=temp/10; 
} 
if(no==sum) 
{ 
printf("\n%d", no); 
count++; 
} 
} 
printf("%d",count); 
getch( ); 
return 0; 
} 


